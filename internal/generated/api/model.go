// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/99designs/gqlgen/graphql"
	"github.com/avptp/brain/internal/generated/data"
	"github.com/avptp/brain/internal/generated/data/person"
	"github.com/google/uuid"
)

type ApplyEmailAuthorizationInput struct {
	Token string `json:"token"`
}

type ApplyEmailAuthorizationPayload struct {
	AuthorizationID uuid.UUID `json:"authorizationId"`
}

type ApplyPasswordAuthorizationInput struct {
	Token       string `json:"token"`
	NewPassword string `json:"newPassword"`
}

type ApplyPasswordAuthorizationPayload struct {
	AuthorizationID uuid.UUID `json:"authorizationId"`
}

type CreateAuthenticationInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type CreateAuthenticationPayload struct {
	Token string `json:"token"`
}

type CreateBillingCheckoutSessionPayload struct {
	CheckoutSessionURL string `json:"checkoutSessionUrl"`
}

type CreateBillingPortalSessionPayload struct {
	PortalSessionURL string `json:"portalSessionUrl"`
}

type CreateEmailAuthorizationInput struct {
	PersonID uuid.UUID `json:"personId"`
}

type CreateEmailAuthorizationPayload struct {
	Authorization *data.Authorization `json:"authorization"`
}

type CreatePasswordAuthorizationInput struct {
	Email   string `json:"email"`
	Captcha string `json:"captcha"`
}

type CreatePasswordAuthorizationPayload struct {
	Success bool `json:"success"`
}

type CreatePersonInput struct {
	Email     string                     `json:"email"`
	Password  string                     `json:"password"`
	TaxID     string                     `json:"taxId"`
	FirstName string                     `json:"firstName"`
	LastName  graphql.Omittable[*string] `json:"lastName,omitempty"`
	Language  string                     `json:"language"`
	Captcha   string                     `json:"captcha"`
}

type CreatePersonPayload struct {
	Person *data.Person `json:"person"`
}

type DeleteAuthenticationInput struct {
	ID uuid.UUID `json:"id"`
}

type DeleteAuthenticationPayload struct {
	AuthenticationID uuid.UUID `json:"authenticationId"`
}

type DeletePersonInput struct {
	ID              uuid.UUID `json:"id"`
	CurrentPassword string    `json:"currentPassword"`
	Captcha         string    `json:"captcha"`
}

type DeletePersonPayload struct {
	PersonID uuid.UUID `json:"personId"`
}

type UpdatePersonInput struct {
	ID         uuid.UUID                         `json:"id"`
	Email      graphql.Omittable[*string]        `json:"email,omitempty"`
	Phone      graphql.Omittable[*string]        `json:"phone,omitempty"`
	TaxID      graphql.Omittable[*string]        `json:"taxId,omitempty"`
	FirstName  graphql.Omittable[*string]        `json:"firstName,omitempty"`
	LastName   graphql.Omittable[*string]        `json:"lastName,omitempty"`
	Language   graphql.Omittable[*string]        `json:"language,omitempty"`
	Birthdate  graphql.Omittable[*time.Time]     `json:"birthdate,omitempty"`
	Gender     graphql.Omittable[*person.Gender] `json:"gender,omitempty"`
	Address    graphql.Omittable[*string]        `json:"address,omitempty"`
	PostalCode graphql.Omittable[*string]        `json:"postalCode,omitempty"`
	City       graphql.Omittable[*string]        `json:"city,omitempty"`
	Country    graphql.Omittable[*string]        `json:"country,omitempty"`
}

type UpdatePersonPasswordInput struct {
	ID              uuid.UUID `json:"id"`
	CurrentPassword string    `json:"currentPassword"`
	NewPassword     string    `json:"newPassword"`
	Captcha         string    `json:"captcha"`
}

type UpdatePersonPasswordPayload struct {
	Person *data.Person `json:"person"`
}

type UpdatePersonPayload struct {
	Person *data.Person `json:"person"`
}
